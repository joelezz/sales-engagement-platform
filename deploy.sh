#!/bin/bash

# Sales Engagement Platform - Tuotantok√§ytt√∂√∂notto
# K√§ytt√∂: ./deploy.sh

set -e

echo "üöÄ Sales Engagement Platform - Tuotantok√§ytt√∂√∂notto"
echo "=================================================="

# V√§rit
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Tarkista ett√§ ollaan oikeassa hakemistossa
if [ ! -f "docker-compose.prod.yml" ]; then
    echo -e "${RED}‚ùå docker-compose.prod.yml ei l√∂ydy. Aja skripti projektin juuressa.${NC}"
    exit 1
fi

# Tarkista ett√§ .env.production on olemassa
if [ ! -f ".env.production" ]; then
    echo -e "${RED}‚ùå .env.production ei l√∂ydy. Kopioi .env.production ja t√§yt√§ oikeat arvot.${NC}"
    exit 1
fi

# Kopioi tuotantoasetukset
echo -e "${YELLOW}üìã Kopioidaan tuotantoasetukset...${NC}"
cp .env.production .env

# Tarkista Docker
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker ei ole asennettu. Asenna Docker ensin.${NC}"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose ei ole asennettu. Asenna Docker Compose ensin.${NC}"
    exit 1
fi

# Pys√§yt√§ vanhat kontainerit
echo -e "${YELLOW}üõë Pys√§ytet√§√§n vanhat kontainerit...${NC}"
docker-compose -f docker-compose.prod.yml down || true

# Rakenna ja k√§ynnist√§ uudet kontainerit
echo -e "${YELLOW}üî® Rakennetaan ja k√§ynnistet√§√§n kontainerit...${NC}"
docker-compose -f docker-compose.prod.yml up -d --build

# Odota ett√§ tietokanta k√§ynnistyy
echo -e "${YELLOW}‚è≥ Odotetaan tietokannan k√§ynnistymist√§...${NC}"
sleep 10

# Suorita migraatiot
echo -e "${YELLOW}üóÑÔ∏è Suoritetaan tietokannan migraatiot...${NC}"
docker-compose -f docker-compose.prod.yml exec -T backend alembic upgrade head

# Tarkista palveluiden tila
echo -e "${YELLOW}üîç Tarkistetaan palveluiden tila...${NC}"
docker-compose -f docker-compose.prod.yml ps

# Testaa backend
echo -e "${YELLOW}üß™ Testataan backend...${NC}"
sleep 5
if curl -f http://localhost:8001/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Backend toimii!${NC}"
else
    echo -e "${RED}‚ùå Backend ei vastaa. Tarkista lokit: docker-compose -f docker-compose.prod.yml logs backend${NC}"
fi

# Testaa frontend
echo -e "${YELLOW}üß™ Testataan frontend...${NC}"
if curl -f http://localhost:3000 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Frontend toimii!${NC}"
else
    echo -e "${RED}‚ùå Frontend ei vastaa. Tarkista lokit: docker-compose -f docker-compose.prod.yml logs frontend${NC}"
fi

echo ""
echo -e "${GREEN}üéâ K√§ytt√∂√∂notto valmis!${NC}"
echo ""
echo "üìä Hy√∂dylliset komennot:"
echo "  Lokit:           docker-compose -f docker-compose.prod.yml logs -f"
echo "  Tila:            docker-compose -f docker-compose.prod.yml ps"
echo "  Pys√§yt√§:         docker-compose -f docker-compose.prod.yml down"
echo "  K√§ynnist√§:       docker-compose -f docker-compose.prod.yml up -d"
echo ""
echo "üåê Palvelut:"
echo "  Backend:         http://localhost:8001"
echo "  Frontend:        http://localhost:3000"
echo "  API Docs:        http://localhost:8001/docs"
echo ""
echo "üîß Seuraavat vaiheet:"
echo "  1. Konfiguroi Nginx reverse proxy"
echo "  2. Hanki SSL-sertifikaatit (Let's Encrypt)"
echo "  3. Aseta DNS-asetukset (call.duoai.tech)"
echo "  4. Testaa Twilio webhook-toiminnot"
echo ""
echo -e "${YELLOW}üìñ Katso t√§ydelliset ohjeet: PRODUCTION_DEPLOYMENT_GUIDE.md${NC}"