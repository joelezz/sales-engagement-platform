"""Add contact_metadata field to contacts table

Revision ID: 39f427de019f
Revises: 003
Create Date: 2025-10-23 21:25:30.878609

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '39f427de019f'
down_revision = '003'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_audit_log_id', table_name='audit_log')
    op.drop_index('ix_audit_log_tenant_id', table_name='audit_log')
    op.drop_table('audit_log')
    op.add_column('activities', sa.Column('payload', sa.JSON(), nullable=False))
    op.add_column('activities', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('activities', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('activities', 'type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('CALL', 'EMAIL', 'SMS', 'NOTE', 'MEETING', name='activitytype'),
               existing_nullable=False)
    op.create_index('ix_activities_contact_created', 'activities', ['contact_id', 'created_at'], unique=False)
    op.create_index('ix_activities_tenant_contact', 'activities', ['tenant_id', 'contact_id'], unique=False)
    op.create_index('ix_activities_tenant_type_created', 'activities', ['tenant_id', 'type', 'created_at'], unique=False)
    op.create_index('ix_activities_tenant_user', 'activities', ['tenant_id', 'user_id'], unique=False)
    op.create_index(op.f('ix_activities_type'), 'activities', ['type'], unique=False)
    op.create_index(op.f('ix_activities_user_id'), 'activities', ['user_id'], unique=False)
    op.drop_column('activities', 'metadata')
    op.drop_column('activities', 'title')
    op.drop_column('activities', 'description')
    op.add_column('calls', sa.Column('call_sid', sa.String(length=34), nullable=False))
    op.add_column('calls', sa.Column('start_time', sa.DateTime(timezone=True), nullable=True))
    op.add_column('calls', sa.Column('end_time', sa.DateTime(timezone=True), nullable=True))
    op.add_column('calls', sa.Column('has_recording', sa.Boolean(), nullable=True))
    op.add_column('calls', sa.Column('recording_sid', sa.String(length=34), nullable=True))
    op.add_column('calls', sa.Column('price', sa.Float(), nullable=True))
    op.add_column('calls', sa.Column('price_unit', sa.String(length=3), nullable=True))
    op.alter_column('calls', 'direction',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('INBOUND', 'OUTBOUND', name='calldirection'),
               existing_nullable=False)
    op.alter_column('calls', 'status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('INITIATED', 'RINGING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'BUSY', 'NO_ANSWER', 'CANCELED', name='callstatus'),
               existing_nullable=False)
    op.alter_column('calls', 'from_number',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.alter_column('calls', 'to_number',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.alter_column('calls', 'contact_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('calls_twilio_call_sid_key', 'calls', type_='unique')
    op.create_index(op.f('ix_calls_call_sid'), 'calls', ['call_sid'], unique=True)
    op.create_index(op.f('ix_calls_contact_id'), 'calls', ['contact_id'], unique=False)
    op.create_index(op.f('ix_calls_user_id'), 'calls', ['user_id'], unique=False)
    op.drop_column('calls', 'recording_duration')
    op.drop_column('calls', 'twilio_call_sid')
    op.add_column('contacts', sa.Column('contact_metadata', sa.JSON(), nullable=True))
    op.alter_column('contacts', 'notes',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_contacts_phone'), 'contacts', ['phone'], unique=False)
    op.drop_column('contacts', 'is_deleted')
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('ADMIN', 'MANAGER', 'REP', name='userrole'),
               existing_nullable=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'role',
               existing_type=sa.Enum('ADMIN', 'MANAGER', 'REP', name='userrole'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.add_column('contacts', sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_contacts_phone'), table_name='contacts')
    op.alter_column('contacts', 'notes',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('contacts', 'contact_metadata')
    op.add_column('calls', sa.Column('twilio_call_sid', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('calls', sa.Column('recording_duration', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_calls_user_id'), table_name='calls')
    op.drop_index(op.f('ix_calls_contact_id'), table_name='calls')
    op.drop_index(op.f('ix_calls_call_sid'), table_name='calls')
    op.create_unique_constraint('calls_twilio_call_sid_key', 'calls', ['twilio_call_sid'])
    op.alter_column('calls', 'contact_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('calls', 'to_number',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('calls', 'from_number',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('calls', 'status',
               existing_type=sa.Enum('INITIATED', 'RINGING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'BUSY', 'NO_ANSWER', 'CANCELED', name='callstatus'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('calls', 'direction',
               existing_type=sa.Enum('INBOUND', 'OUTBOUND', name='calldirection'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.drop_column('calls', 'price_unit')
    op.drop_column('calls', 'price')
    op.drop_column('calls', 'recording_sid')
    op.drop_column('calls', 'has_recording')
    op.drop_column('calls', 'end_time')
    op.drop_column('calls', 'start_time')
    op.drop_column('calls', 'call_sid')
    op.add_column('activities', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('activities', sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.add_column('activities', sa.Column('metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_activities_user_id'), table_name='activities')
    op.drop_index(op.f('ix_activities_type'), table_name='activities')
    op.drop_index('ix_activities_tenant_user', table_name='activities')
    op.drop_index('ix_activities_tenant_type_created', table_name='activities')
    op.drop_index('ix_activities_tenant_contact', table_name='activities')
    op.drop_index('ix_activities_contact_created', table_name='activities')
    op.alter_column('activities', 'type',
               existing_type=sa.Enum('CALL', 'EMAIL', 'SMS', 'NOTE', 'MEETING', name='activitytype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('activities', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('activities', 'updated_at')
    op.drop_column('activities', 'payload')
    op.create_table('audit_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('action', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('resource_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('resource_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('changes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='audit_log_company_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='audit_log_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='audit_log_pkey')
    )
    op.create_index('ix_audit_log_tenant_id', 'audit_log', ['tenant_id'], unique=False)
    op.create_index('ix_audit_log_id', 'audit_log', ['id'], unique=False)
    # ### end Alembic commands ###