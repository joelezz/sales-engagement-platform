version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  json:
    format: "%(asctime)s"
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    
  detailed:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(funcName)s:%(lineno)d - %(message)s"

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout
    
  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/app.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/error.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    
  audit_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/audit.log
    maxBytes: 10485760  # 10MB
    backupCount: 10

loggers:
  app:
    level: INFO
    handlers: [console, file, error_file]
    propagate: false
    
  app.services.auth_service:
    level: INFO
    handlers: [console, file, audit_file]
    propagate: false
    
  app.services.audit_service:
    level: INFO
    handlers: [audit_file]
    propagate: false
    
  app.core.security:
    level: WARNING
    handlers: [console, error_file, audit_file]
    propagate: false
    
  sqlalchemy.engine:
    level: WARNING
    handlers: [console, file]
    propagate: false
    
  uvicorn:
    level: INFO
    handlers: [console, file]
    propagate: false
    
  celery:
    level: INFO
    handlers: [console, file]
    propagate: false

root:
  level: INFO
  handlers: [console, file]